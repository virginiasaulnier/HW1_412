LWK10$CHR <- apply(LWK10,1,function(row)10)
LWK11 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr11.txt",header=T))
LWK11$CHR <- apply(LWK11,1,function(row)11)
LWK12 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr12.txt",header=T))
LWK12$CHR <- apply(LWK12,1,function(row)12)
LWK13 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr13.txt",header=T))
LWK13$CHR <- apply(LWK13,1,function(row)13)
LWK14 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr14.txt",header=T))
LWK14$CHR <- apply(LWK14,1,function(row)14)
LWK15 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr15.txt",header=T))
LWK15$CHR <- apply(LWK15,1,function(row)15)
LWK16 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr16.txt",header=T))
LWK16$CHR <- apply(LWK16,1,function(row)16)
LWK17 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr17.txt",header=T))
LWK17$CHR <- apply(LWK17,1,function(row)17)
LWK18 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr18.txt",header=T))
LWK18$CHR <- apply(LWK18,1,function(row)18)
LWK19 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr19.txt",header=T))
LWK19$CHR <- apply(LWK19,1,function(row)19)
LWK20 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr20.txt",header=T))
LWK20$CHR <- apply(LWK20,1,function(row)20)
LWK21 <- as.data.frame(read.table("/Users/virginiasaulnier/Desktop/HapMap Project/LWK_p310-foldCV_elasticNet_alpha0.5_hapmapchr21.txt",header=T))
LWK21$CHR <- apply(LWK21,1,function(row)21)
LWKALL<-rbind(LWK1,LWK2,LWK3,LWK4,LWK5,LWK6,LWK7,LWK8,LWK10,LWK11,LWK12,LWK13,LWK14,LWK15,LWK16,LWK17,LWK18,LWK19,LWK20,LWK21)#puts all data files into one big file....
LWKALL$POP <- apply(LWKALL,1,function(row)"LWK")
CHBALL$POP <- apply(CHBALL,1,function(row)"CHB")
GIHALL$POP <- apply(GIHALL,1,function(row)"GIH")
JPTALL$POP <- apply(JPTALL,1,function(row)"JPT")
MEXALL$POP <- apply(MEXALL,1,function(row)"MEX")
MKKALL$POP <- apply(MKKALL,1,function(row)"MKK")
YRIALL$POP <- apply(YRIALL,1,function(row)"YRI")
POPALL<-rbind(LWKALL,CHBALL, MKKALL, MEXALL, JPTALL, YRIALL, GIHALL)
library(GGally)
#ggpairs(POPALL,lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="E-N (alpha=" %&% alpha %&% ") 10-fold CV R2")
ggpairs(POPALL[7,10],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[:7,10],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[7:10],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[7,10],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[,c(7,10)],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[,c(7:10)],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[,c(8:10)],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
ggpairs(POPALL[,c(7:9)],lower=list(continuous="points",params=c(cex=0.7,ylim=c(0,1),xlim=c(0,1))),diag=list(continuous='blank'),title="bob")
View(POPALL)
save.image("~/POPALL.RData")
View(POPALL)
View(POPALL)
View(CHBALL)
library(dplyr)
#setwd('/Users/VirginiaSaulnier/Desktop/412_hw1')
#all_content = readLines("311_Service_Requests_-_Alley_Lights_Out.csv")
readin <- function(wd,file,skip){
setwd(wd)
dataframe = readLines(file)
if (skip == "TRUE")
{
dataframe = dataframe[-1]
}
data = read.csv(textConnection(dataframe),header=T, fill = TRUE )
return(data)
}
alleylights <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','311_Service_Requests_-_Alley_Lights_Out.csv',TRUE)
View(alleylights)
View(alleylights)
readin <- function(wd,file,skip){
setwd(wd)
dataframe = readLines(file)
if (skip == "TRUE")
{
dataframe = dataframe[-1]
}
data = read.csv(textConnection(dataframe),header=T, fill = TRUE )
return(data)
}
alleylights <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','311_Service_Requests_-_Alley_Lights_Out.csv',TRUE)
crime <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','Crimes2016.csv',FALSE)
View(crime)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
names(alleylights)
#alleylights$Request <- format(alleylights$Request, format="%m/%d/%y")
#alleylights$Completion <- format(alleylights$Completion, format="%m/%d/%y")
# based on variable values
#newalley <- alleylights[ which(alleylights$Date >'01/01/2016' & alleylights$Status == 'completed') ]
#alley16 <- select(alleylights,Request == '2016')
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
#district_diff <-  c(alley16$date_diff, alley16$district)
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
#crimedata = readLines("Crimes2016.csv")
#crime = read.csv(textConnection(crimedata),header=T, fill = TRUE )
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
#colSums(crime_counts, na.rm = FALSE, dims = 1)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
View(service_ave)
View(service_ave)
View(crime_counts)
View(crime_counts)
View(crime)
View(crime)
View(alley16)
View(results)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
#names(alleylights)
#alleylights$Request <- format(alleylights$Request, format="%m/%d/%y")
#alleylights$Completion <- format(alleylights$Completion, format="%m/%d/%y")
# based on variable values
#newalley <- alleylights[ which(alleylights$Date >'01/01/2016' & alleylights$Status == 'completed') ]
#alley16 <- select(alleylights,Request == '2016')
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
#district_diff <-  c(alley16$date_diff, alley16$district)
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
#crimedata = readLines("Crimes2016.csv")
#crime = read.csv(textConnection(crimedata),header=T, fill = TRUE )
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
#colSums(crime_counts, na.rm = FALSE, dims = 1)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
View(alley16)
View(alley16)
View(alleylights)
View(alleylights)
View(alley16)
View(alley16)
View(crime)
View(crime)
View(results)
View(results)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
#arrange(District)
#group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
#arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
#arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
#arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(avg = mean(date_diff, na.rm=TRUE)) %>%
#arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
View(results)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repair.time = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crime.count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repair_time = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crime_count=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(count)
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = mean(date_diff, na.rm=TRUE)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
View(results)
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = mean(date_diff, na.rm=TRUE)) %>%
signif(repairtime, digits = 3) %>%
arrange(District)
group_by(alley16, District)
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = mean(date_diff, na.rm=TRUE)) %>%
signif(repairtime, digits = 3) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
View(alley16)
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = mean(date_diff, na.rm=TRUE)) %>%
round(repairtime, digits = 3)
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
service_ave = alley16 %>%
group_by(District) %>%
summarise(round(repairtime = mean(date_diff, na.rm=TRUE),digits = 3) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
service_ave = alley16 %>%
group_by(District) %>%
summarise(round(repairtime = mean(date_diff, na.rm=TRUE),digits = 3) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = round(repairtime = mean(date_diff, na.rm=TRUE),digits = 3)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = round(mean(date_diff, na.rm=TRUE),digits = 3)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = round(mean(date_diff, na.rm=TRUE),digits = 1)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
alley16 <- alleylights[grep("2016", alleylights$Request), ]
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")
service_ave = alley16 %>%
group_by(District) %>%
summarise(repairtime = round(mean(date_diff, na.rm=TRUE),digits = 1)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>%
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>%
arrange(crimetotal)
View(results)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
print('The district with the slowest repair time is' 'the number of crimes this year was' '.')
print('The district with the quickest repair time is'dat$MAX 'the number of crimes this year was' '.')
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
print('The district with the slowest repair time is' 'the number of crimes this year was' '.')
print('The district with the quickest repair time is' dat$MAX 'the number of crimes this year was' '.')
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
cat('The district with the slowest repair time is' 'the number of crimes this year was' '.')
cat('The district with the quickest repair time is' dat$MAX 'the number of crimes this year was' '.')
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
cat("The district with the slowest repair time is" "the number of crimes this year was" ".")
cat("The district with the quickest repair time is" dat$MAX "the number of crimes this year was" ".")
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
print(paste0("The district with the slowest repair time is" "the number of crimes this year was" "."))
print(paste0("The district with the quickest repair time is" dat$MAX "the number of crimes this year was" "."))
("The district with the slowest repair time is" "the number of crimes this year was" "."))
paste(("The district with the slowest repair time is" "the number of crimes this year was" "."))
paste("The district with the slowest repair time is" "the number of crimes this year was" ".")
cat("The district with the slowest repair time is" "the number of crimes this year was" ".")
cat("this is fun")
cat("this is fun playing with R at 12:30" dat$MAX)
cat("this is fun playing with R at 12:30" %dat$MAX)
cat("this is fun playing with R at 12:30", dat$MAX)
test =max(results)
cat("The district with the slowest repair time is the number of crimes this year was")
cat("The district with the quickest repair time is" dat$MAX "the number of crimes this year was")
test =max(results)
cat(test)
test =max(results)
cat("fun",test)
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
cat("The district with the slowest repair time is the number of crimes this year was")
cat("The district with the quickest repair time is the number of crimes this year was",dat$MAX)
#colMax <- function(data) sapply(data, max, na.rm = TRUE)
dat$MAX <- apply(results[,2],1,max,na.rm=TRUE)
cat("The district with the slowest repair time is the number of crimes this year was")
cat("The district with the quickest repair time is the number of crimes this year was",dat$MAX)
View(results)
plot(results$crimetotal, results$repairtime)
library(dplyr)
#create a function to read in files, also has ability to skip extra header line, uses headers as column titles and returns data
readin <- function(wd,file,skip){
setwd(wd)
dataframe = readLines(file)
if (skip == "TRUE")
{
dataframe = dataframe[-1]
}
data = read.csv(textConnection(dataframe),header=T, fill = TRUE )
return(data)
}
alleylights <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','311_Service_Requests_-_Alley_Lights_Out.csv',TRUE)#read in alley lights file using funtion readin
crime <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','Crimes2016.csv',FALSE)#read in crime info using funtion readin
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]#filter out 2016
alley16$date_diff <- as.Date(as.character(alley16$Completion),format="%m/%d/%y")-
as.Date(as.character(alley16$Request), format="%m/%d/%y")#get date diff between date service was requested and date completed create new column to store
service_ave = alley16 %>%#create new database(service_ave)with repair time average by district
group_by(District) %>%
summarise(repairtime = round(mean(date_diff, na.rm=TRUE),digits = 1)) %>%
arrange(District)
group_by(alley16, District)
crime_counts = crime %>% #create new database(crime_counts) using the number of crimes per district, calculated by counting the instance of crimes(rows) per district
group_by(District) %>%
summarise(crimetotal=length(Primary.Type)) %>%
arrange(District)
results = full_join(crime_counts, service_ave, by = "District")%>% #combine two data sets and arrage by crime total
arrange(crimetotal)
plot(results$crimetotal, results$repairtime)
#below is the start of print out info, will add if I have time
#dat$MAX <- apply(results[,-1],1,max,na.rm=TRUE)
#cat("The district with the slowest repair time is the number of crimes this year was")
#cat("The district with the quickest repair time is the number of crimes this year was",dat$MAX)
View(results)
View(results)
alleylights <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','311_Service_Requests_-_Alley_Lights_Out.csv',TRUE)#read in alley lights file using funtion readin
crime <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','Crimes2016.csv',FALSE)#read in crime info using funtion readin
population <- readin('/Users/VirginiaSaulnier/Desktop/412_hw1','District_Population.csv',FALSE)
colnames(alleylights) <- c("Request","Status","Completion", "Number","Type", "Address", "Zip", "1","2","Ward","District","Community", "Latitude","Longitude","Location")
alley16 <- alleylights[grep("2016", alleylights$Request), ]#filter out 2016
View(population)
results = full_join(crime_counts, service_ave, population,by = "District")%>% #combine two data sets and arrage by crime total
arrange(crimetotal)
View(results)
View(results)
results = full_join(crime_counts, service_ave, population, by = "District")%>% #combine three data sets and arrage by crime total
arrange(crimetotal)
View(results)
results = full_join(crime_counts, service_ave, by = "District")%>% #combine three data sets and arrage by crime total
arrange(crimetotal)
results = full_join(results, population, by = "District")%>% #combine three data sets and arrage by crime total
arrange(crimetotal)
View(results)
results$crimerate <- results$crimetotal/results$population
results$crimerate <- (results$crimetotal)/(results$population)
View(population)
View(results)
results$crimerate <- as.character(results$crimetotal)/as.character(results$population)
results$crimerate <- as.numeric(results$crimetotal)/as.numeric(results$population)
results$crimerate <- as.numeric(results$crimetotal,na.rm=TRUE)/as.numeric(results$population,na.rm=TRUE)
results$crimerate <- as.numeric(results$crimetotal,na.rm=TRUE)/as.numeric(results$population,na.rm=TRUE)
results$crimerate <- as.numeric(results$crimetotal,na.rm=FALSE)/as.numeric(results$population,na.rm=FALSE)
results$crimerate <- as.numeric(results$crimetotal,na.rm=FALSE)/as.numeric(results$population,na.rm=FALSE)
